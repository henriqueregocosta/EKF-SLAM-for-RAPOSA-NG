#!/usr/bin/env python

import numpy as np
import queue
import rospy
import thread

import EKF_SLAM
import observations_function as obs
import odometry_function as odo
import slamraposa_ros.slamraposa_node


def check_for_shutdown(queue):
    while not rospy.is_shutdown():
        pass
    queue.put(['end'])


def update_noises(observations, odometry, Q, R):
    observations.Q = Q
    odometry.R = R


def main():
    rospy.init_node('slamraposa', anonymous=False)

    q = queue.Queue()
    Q = np.identity(3)
    R = np.identity(3)

    operation = EKF_SLAM.SLAM(q)

    observations = obs.ObsInterp(q, Q)
    odometry = odo.OdoInterp(q, R)

    thread.start_new_thread(check_for_shutdown, (q, ))

    while not rospy.is_shutdown():
        # atualiza-las em funcao do tempo de espera, da velocidade do robot, etc...
        
        Q = np.identity(3)
        R = np.identity(3)
        update_noises(observations, odometry, Q, R)

        event = q.get()     # event = ['obs', markers_I_see, Q]
                            # or event = ['odo', position_and_quaternions, R]
        operation.EKF(event)


if __name__ == '__main__':
    main()